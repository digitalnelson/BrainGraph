<common:LayoutAwarePage
	x:Name="pageRoot"
	x:Class="BrainGraph.WinStore.Screens.Nodal.NodalStrengthDataTypeView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:BrainGraph.WinStore.Screens.Nodal"
	xmlns:common="using:BrainGraph.WinStore.Common"
	xmlns:util="using:BrainGraph.WinStore.Common.Util"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:oxy="using:OxyPlot.Metro"
	xmlns:caliburn="using:Caliburn.Micro"
	mc:Ignorable="d">

	<Page.BottomAppBar>
		<AppBar>
			<Grid>
				<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
					<Button caliburn:Message.Attach="[Event Click] = [SaveCharts($eventArgs)]" >
						<Button.Style>
							<Style BasedOn="{StaticResource AppBarButtonStyle}" TargetType="ButtonBase">
								<Setter Property="AutomationProperties.AutomationId" Value="EditAppBarButton"/>
								<Setter Property="AutomationProperties.Name" Value="Save Charts"/>
								<Setter Property="Content" Value="&#xE105;"/>
							</Style>
						</Button.Style>
					</Button>
				</StackPanel>
			</Grid>
		</AppBar>
	</Page.BottomAppBar>
	
	<Page.Resources>

		<CollectionViewSource
			x:Name="itemsSource"
			Source="{Binding DataItems}"
			IsSourceGrouped="false"
			d:Source="{Binding DataItems, Source={d:DesignInstance Type=local:NodalStrengthDataTypeViewModel, IsDesignTimeCreatable=True}}"
		/>

		<util:StringFormatConverter x:Key="StringFormatConverter" />
		<Style x:Key="FieldTitle" TargetType="TextBlock">
			<Setter Property="Margin" Value="0,0,8,0"/>
			<Setter Property="FontWeight" Value="Bold"/>
		</Style>
		<Style x:Key="FieldValue" TargetType="TextBlock"/>

	</Page.Resources>

	<!--
		This grid acts as a root panel for the page that defines two rows:
		* Row 0 contains the back button and page title
		* Row 1 contains the rest of the page layout
	-->
	<Grid Style="{StaticResource LayoutRootStyle}">
		<Grid.RowDefinitions>
			<RowDefinition Height="140"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<!-- Back button and page title -->
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
			<TextBlock x:Name="pageTitle" Grid.Column="1" Text="{Binding Title}" Style="{StaticResource PageHeaderTextStyle}"/>
		</Grid>

		<Grid Grid.Row="1" Margin="120,0,0,50">

			<GridView IsItemClickEnabled="True" caliburn:Message.Attach="[Event ItemClick] = [DataTypeSelected($eventArgs)]" ItemsSource="{Binding Source={StaticResource itemsSource}}" ScrollViewer.IsHorizontalScrollChainingEnabled="False" IsSwipeEnabled="True" SelectionMode="None">

				<GridView.ItemsPanel>
					<ItemsPanelTemplate>
						<VirtualizingStackPanel Orientation="Horizontal" VerticalAlignment="Stretch" />
					</ItemsPanelTemplate>
				</GridView.ItemsPanel>

				<GridView.ItemContainerStyle>
					<Style TargetType="GridViewItem">
						<Setter Property="Margin" Value="2"/>
						<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
						<Setter Property="VerticalContentAlignment" Value="Stretch"/>
					</Style>
				</GridView.ItemContainerStyle>

				<GridView.ItemTemplate>
					<DataTemplate>
						<Grid HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="4" IsHitTestVisible="False">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition/>
							</Grid.RowDefinitions>

							<StackPanel Orientation="Horizontal">
								<TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="{StaticResource ApplicationForegroundThemeBrush}" Text="{Binding DataType}" FontFamily="Segoe UI Semibold" Style="{StaticResource TitleTextStyle}" FontSize="24" Margin="0,0,0,6" />
								<TextBlock Text=" ( " />
								<TextBlock Text="{Binding SigNodeCount}" />
								<TextBlock Text=" )" />
							</StackPanel>
							<VariableSizedWrapGrid Grid.Row="1" ItemHeight="300" ItemWidth="300">
								<!--<Grid Margin="20">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>

									<TextBlock Grid.Row="0" Text="Sig Nodes" Style="{StaticResource FieldTitle}" />
									<TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SigNodeCount, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:########0}'}" Style="{StaticResource FieldValue}" />

									<TextBlock Grid.Row="1" Text="Total Nodes" Style="{StaticResource FieldTitle}" />
									<TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding TotalNodeCount, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:########0}'}" Style="{StaticResource FieldValue}" />
								</Grid>-->
								<oxy:Plot Background="#00000000" Model="{Binding AXPlotModelPos}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
								<oxy:Plot Background="#00000000" Model="{Binding CRPlotModelPos}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
								<oxy:Plot Background="#00000000" Model="{Binding SGPlotModelPos}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
								
								<oxy:Plot Background="#00000000" Model="{Binding AXPlotModelNeg}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
								<oxy:Plot Background="#00000000" Model="{Binding CRPlotModelNeg}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
								<oxy:Plot Background="#00000000" Model="{Binding SGPlotModelNeg}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
							</VariableSizedWrapGrid>
						</Grid>
					</DataTemplate>
				</GridView.ItemTemplate>

			</GridView>
		</Grid>

		<VisualStateManager.VisualStateGroups>

			<!-- Visual states reflect the application's view state -->
			<VisualStateGroup x:Name="ApplicationViewStates">
				<VisualState x:Name="FullScreenLandscape"/>
				<VisualState x:Name="Filled"/>

				<!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
				<VisualState x:Name="FullScreenPortrait">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>

				<!-- The back button and title have different styles when snapped -->
				<VisualState x:Name="Snapped">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>
</common:LayoutAwarePage>